

--Table: Users
CREATE TABLE Users (
    id          NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username    VARCHAR2(50) UNIQUE NOT NULL,
    password    VARCHAR2(255) NOT NULL,  -- encrypted
    created_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

--Table: HistoricalQueries
CREATE TABLE HistoricalQueries (
    id              NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id         NUMBER REFERENCES Users(id),  -- Relationship to the Users table through user_id
    query_params    VARCHAR2(500),  -- Parameters sent to the API, such as city, date, etc.
    response        CLOB,           -- Full API response in JSON format or part of it
    queried_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP  -- Date and time of consultation
);


--Table: ApiKeys
CREATE TABLE ApiKeys (
    id          NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id     NUMBER REFERENCES Users(id),  -- Relationship to the Users table through user_id
    api_key     VARCHAR2(255) NOT NULL,  -- encrypted or encoded
    provider    VARCHAR2(100) DEFAULT 'VisualCrossing', --API Provider
    created_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

--Table: Cities
CREATE TABLE Cities (
    id          NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name     VARCHAR2(255) NOT NULL
);


-- Ensures that each user has only one API key per provider
ALTER TABLE ApiKeys
ADD CONSTRAINT uq_user_provider UNIQUE (user_id, provider);
